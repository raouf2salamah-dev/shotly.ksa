00:00 +0: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart                                                                                                                   00:01 +0: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart                                                                                                                   00:02 +0: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart                                                                                                                   00:02 +0 -1: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                            
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart: test/secure_storage_test.dart:14:16: Error: The method 'MockFlutterSecureStorage.write' has fewer named arguments than those of overridden method 'FlutterSecureStorage.write'.
    Future<void> write({required String key, required String value}) async {
                 ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:91:16: Context: This is the overridden method ('write').
    Future<void> write({
                 ^
  test/secure_storage_test.dart:14:16: Error: The method 'MockFlutterSecureStorage.write' doesn't have the named parameter 'aOptions' of overridden method 'FlutterSecureStorage.write'.
    Future<void> write({required String key, required String value}) async {
                 ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:91:16: Context: This is the overridden method ('write').
    Future<void> write({
                 ^
  test/secure_storage_test.dart:19:19: Error: The method 'MockFlutterSecureStorage.read' has fewer named arguments than those of overridden method 'FlutterSecureStorage.read'.
    Future<String?> read({required String key}) async {
                    ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:141:19: Context: This is the overridden method ('read').
    Future<String?> read({
                    ^
  test/secure_storage_test.dart:19:19: Error: The method 'MockFlutterSecureStorage.read' doesn't have the named parameter 'aOptions' of overridden method 'FlutterSecureStorage.read'.
    Future<String?> read({required String key}) async {
                    ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:141:19: Context: This is the overridden method ('read').
    Future<String?> read({
                    ^
  test/secure_storage_test.dart:24:16: Error: The method 'MockFlutterSecureStorage.delete' has fewer named arguments than those of overridden method 'FlutterSecureStorage.delete'.
    Future<void> delete({required String key}) async {
                 ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:205:16: Context: This is the overridden method ('delete').
    Future<void> delete({
                 ^
  test/secure_storage_test.dart:24:16: Error: The method 'MockFlutterSecureStorage.delete' doesn't have the named parameter 'aOptions' of overridden method 'FlutterSecureStorage.delete'.
    Future<void> delete({required String key}) async {
                 ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:205:16: Context: This is the overridden method ('delete').
    Future<void> delete({
                 ^
  test/secure_storage_test.dart:29:16: Error: The method 'MockFlutterSecureStorage.deleteAll' has fewer named arguments than those of overridden method 'FlutterSecureStorage.deleteAll'.
    Future<void> deleteAll() async {
                 ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:277:16: Context: This is the overridden method ('deleteAll').
    Future<void> deleteAll({
                 ^
  test/secure_storage_test.dart:34:31: Error: The method 'MockFlutterSecureStorage.readAll' has fewer named arguments than those of overridden method 'FlutterSecureStorage.readAll'.
    Future<Map<String, String>> readAll() async {
                                ^
  ../../.pub-cache/hosted/pub.dev/flutter_secure_storage-9.2.4/lib/flutter_secure_storage.dart:249:31: Context: This is the overridden method ('readAll').
    Future<Map<String, String>> readAll({
                                ^
  test/secure_storage_test.dart:49:11: Error: The method 'MockBox.get' has fewer named arguments than those of overridden method 'Box.get'.
    dynamic get(dynamic key) {
            ^
  ../../.pub-cache/hosted/pub.dev/hive-2.2.3/lib/src/box/box.dart:34:6: Context: This is the overridden method ('get').
    E? get(dynamic key, {E? defaultValue});
       ^
  lib/src/models/secure_user_data.dart:175:11: Error: The getter '_secureStorage' isn't defined for the type 'SecureUserData'.
   - 'SecureUserData' is from 'lib/src/models/secure_user_data.dart'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named '_secureStorage'.
      await _secureStorage.delete(_userIdKey);
            ^^^^^^^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart'
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:03 +0 -2: loading /Users/abdulraoufsalamah/Desktop/Pro/test/asset_optimizer_test.dart [E]                                                                                                           
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/asset_optimizer_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/asset_optimizer_test.dart: test/asset_optimizer_test.dart:28:20: Error: Setter not found: 'compressor'.
      AssetOptimizer.compressor = mockCompressor;
                     ^^^^^^^^^^
  test/asset_optimizer_test.dart:123:43: Error: Member not found: 'AssetOptimizer.compressData'.
        final result = await AssetOptimizer.compressData(
                                            ^^^^^^^^^^^^
  test/asset_optimizer_test.dart:183:29: Error: Member not found: 'AssetOptimizer.getFileExtension'.
        expect(AssetOptimizer.getFileExtension('image.jpg'), equals('jpg'));
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:184:29: Error: Member not found: 'AssetOptimizer.getFileExtension'.
        expect(AssetOptimizer.getFileExtension('path/to/image.png'), equals('png'));
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:185:29: Error: Member not found: 'AssetOptimizer.getFileExtension'.
        expect(AssetOptimizer.getFileExtension('file.with.multiple.dots.webp'), equals('webp'));
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:186:29: Error: Member not found: 'AssetOptimizer.getFileExtension'.
        expect(AssetOptimizer.getFileExtension('no_extension'), equals(''));
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:187:29: Error: Member not found: 'AssetOptimizer.getFileExtension'.
        expect(AssetOptimizer.getFileExtension(''), equals(''));
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:47:27: Error: The method 'compressWithList' isn't defined for the type 'MockFlutterImageCompress'.
   - 'MockFlutterImageCompress' is from 'test/asset_optimizer_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'compressWithList'.
        when(mockCompressor.compressWithList(
                            ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:66:29: Error: The method 'compressWithList' isn't defined for the type 'MockFlutterImageCompress'.
   - 'MockFlutterImageCompress' is from 'test/asset_optimizer_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'compressWithList'.
        verify(mockCompressor.compressWithList(
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:81:27: Error: The method 'compressWithList' isn't defined for the type 'MockFlutterImageCompress'.
   - 'MockFlutterImageCompress' is from 'test/asset_optimizer_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'compressWithList'.
        when(mockCompressor.compressWithList(
                            ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:100:29: Error: The method 'compressWithList' isn't defined for the type 'MockFlutterImageCompress'.
   - 'MockFlutterImageCompress' is from 'test/asset_optimizer_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'compressWithList'.
        verify(mockCompressor.compressWithList(
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:114:27: Error: The method 'compressWithList' isn't defined for the type 'MockFlutterImageCompress'.
   - 'MockFlutterImageCompress' is from 'test/asset_optimizer_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'compressWithList'.
        when(mockCompressor.compressWithList(
                            ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:131:29: Error: The method 'compressWithList' isn't defined for the type 'MockFlutterImageCompress'.
   - 'MockFlutterImageCompress' is from 'test/asset_optimizer_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'compressWithList'.
        verify(mockCompressor.compressWithList(
                              ^^^^^^^^^^^^^^^^
  test/asset_optimizer_test.dart:169:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.jpg'), isTrue);
                                             ^
  test/asset_optimizer_test.dart:170:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.jpeg'), isTrue);
                                             ^
  test/asset_optimizer_test.dart:171:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.png'), isTrue);
                                             ^
  test/asset_optimizer_test.dart:172:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.webp'), isTrue);
                                             ^
  test/asset_optimizer_test.dart:173:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.heic'), isTrue);
                                             ^
  test/asset_optimizer_test.dart:175:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.svg'), isFalse);
                                             ^
  test/asset_optimizer_test.dart:176:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('image.gif'), isFalse);
                                             ^
  test/asset_optimizer_test.dart:177:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress('document.pdf'), isFalse);
                                             ^
  test/asset_optimizer_test.dart:178:44: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List'.
   - 'Uint8List' is from 'dart:typed_data'.
        expect(AssetOptimizer.shouldCompress(''), isFalse);
                                             ^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/asset_optimizer_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/asset_optimizer_test.dart'
00:03 +0 -2: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                            
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:05 +0 -3: loading /Users/abdulraoufsalamah/Desktop/Pro/test/security/certificate_pinning_test.dart [E]                                                                                              
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/security/certificate_pinning_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/security/certificate_pinning_test.dart: Error: Couldn't resolve the package 'flutter_ssl_pinning' in 'package:flutter_ssl_pinning/flutter_ssl_pinning.dart'.
  lib/security/ssl_pinning_adapter.dart:2:8: Error: Not found: 'package:flutter_ssl_pinning/flutter_ssl_pinning.dart'
  import 'package:flutter_ssl_pinning/flutter_ssl_pinning.dart';
         ^
  lib/security/ssl_pinning_adapter.dart:19:29: Error: Method not found: 'FlutterSslPinningHttpClientAdapter'.
      dio.httpClientAdapter = FlutterSslPinningHttpClientAdapter(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  lib/security/ssl_pinning_adapter.dart:55:29: Error: Method not found: 'FlutterSslPinningHttpClientAdapter'.
      dio.httpClientAdapter = FlutterSslPinningHttpClientAdapter(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/security/certificate_pinning_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/security/certificate_pinning_test.dart'
00:05 +0 -3: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                            
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:07 +0 -4: loading /Users/abdulraoufsalamah/Desktop/Pro/test/lazy_loading_manager_test.dart [E]                                                                                                      
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/lazy_loading_manager_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/lazy_loading_manager_test.dart: test/lazy_loading_manager_test.dart:174:49: Error: No named parameter with the name 'maxConcurrentLoads'.
        final limitedManager = LazyLoadingManager(maxConcurrentLoads: 2);
                                                  ^^^^^^^^^^^^^^^^^^
  lib/src/utils/lazy_loading_manager.dart:11:11: Context: Found this candidate, but the arguments don't match.
    factory LazyLoadingManager() => _instance;
            ^
  test/lazy_loading_manager_test.dart:177:26: Error: Method not found: 'Completer'.
        final completer1 = Completer<String>();
                           ^^^^^^^^^
  test/lazy_loading_manager_test.dart:178:26: Error: Method not found: 'Completer'.
        final completer2 = Completer<String>();
                           ^^^^^^^^^
  test/lazy_loading_manager_test.dart:179:26: Error: Method not found: 'Completer'.
        final completer3 = Completer<String>();
                           ^^^^^^^^^
  test/lazy_loading_manager_test.dart:19:48: Error: Too few positional arguments: 2 required, 0 given.
        final result = await manager.loadResource(
                                                 ^
  test/lazy_loading_manager_test.dart:37:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:47:48: Error: Too few positional arguments: 2 required, 0 given.
        final result = await manager.loadResource(
                                                 ^
  test/lazy_loading_manager_test.dart:67:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:73:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:80:22: Error: The method 'isResourceLoaded' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'isResourceLoaded'.
        expect(manager.isResourceLoaded(resourceId1), isTrue);
                       ^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:81:22: Error: The method 'isResourceLoaded' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'isResourceLoaded'.
        expect(manager.isResourceLoaded(resourceId2), isTrue);
                       ^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:89:22: Error: The getter '_resourceCache' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named '_resourceCache'.
        expect(manager._resourceCache.length, equals(0));
                       ^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:99:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:106:15: Error: The method 'prioritizeResource' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'prioritizeResource'.
        manager.prioritizeResource(resourceId, newPriority);
                ^^^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:110:22: Error: The method 'isResourceLoaded' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'isResourceLoaded'.
        expect(manager.isResourceLoaded(resourceId), isTrue);
                       ^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:115:22: Error: The method 'getCachedResourcesCount' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'getCachedResourcesCount'.
        expect(manager.getCachedResourcesCount(), equals(0));
                       ^^^^^^^^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:118:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:124:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:130:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:137:22: Error: The method 'getCachedResourcesCount' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'getCachedResourcesCount'.
        expect(manager.getCachedResourcesCount(), equals(3));
                       ^^^^^^^^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:140:15: Error: The method 'clearResource' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'clearResource'.
        manager.clearResource('resource_2');
                ^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:143:22: Error: The method 'getCachedResourcesCount' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'getCachedResourcesCount'.
        expect(manager.getCachedResourcesCount(), equals(2));
                       ^^^^^^^^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:152:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:158:33: Error: Too few positional arguments: 2 required, 0 given.
        await manager.loadResource(
                                  ^
  test/lazy_loading_manager_test.dart:165:15: Error: The method 'clearResource' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'clearResource'.
        manager.clearResource(resourceId1);
                ^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:168:22: Error: The method 'isResourceLoaded' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'isResourceLoaded'.
        expect(manager.isResourceLoaded(resourceId1), isFalse);
                       ^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:169:22: Error: The method 'isResourceLoaded' isn't defined for the type 'LazyLoadingManager'.
   - 'LazyLoadingManager' is from 'lib/src/utils/lazy_loading_manager.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'isResourceLoaded'.
        expect(manager.isResourceLoaded(resourceId2), isTrue);
                       ^^^^^^^^^^^^^^^^
  test/lazy_loading_manager_test.dart:224:25: Error: The argument type 'List<dynamic>' can't be assigned to the parameter type 'Iterable<Future<dynamic>>'.
   - 'List' is from 'dart:core'.
   - 'Iterable' is from 'dart:core'.
   - 'Future' is from 'dart:async'.
        await Future.wait([future2, future3]);
                          ^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/lazy_loading_manager_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/lazy_loading_manager_test.dart'
00:07 +0 -4: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                            
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:10 +0 -4: loading /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart                                                                                                               00:10 +0 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should load a library once                                                         00:10 +1 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should load a library once                                                         00:10 +1 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests concurrent calls should only load once                                                          00:10 +2 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests concurrent calls should only load once                                                          00:10 +2 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should respect timeout                                                             00:10 +3 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should respect timeout                                                             00:10 +3 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should handle errors                                                               00:10 +4 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should handle errors                                                               00:11 +4 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/deferred_loader_test.dart: DeferredLoader Tests ensureLoaded should handle errors                                                               00:11 +4 -4: loading /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart                                                                                                            00:11 +4 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen renders correctly                                                        00:12 +4 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen renders correctly                                                        00:12 +5 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen renders correctly                                                        00:12 +5 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for non-logged in user                                00:12 +5 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for non-logged in user                                
Navigate to onboarding screen
00:12 +6 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for non-logged in user                                00:12 +6 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:12 +6 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen renders correctly                                                        
Error loading theme mode: MissingPluginException(No implementation found for method read on channel plugins.it_nomads.com/flutter_secure_storage)
00:12 +6 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   
Navigate to buyer screen
00:12 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:13 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:14 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:15 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:16 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:17 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:18 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:19 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:20 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:21 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:22 +7 -4: /Users/abdulraoufsalamah/Desktop/Pro/test/mock_splash_screen_test.dart: Mock SplashScreen Tests MockSplashScreen checks auth status for logged in buyer                                   00:22 +7 -5: loading /Users/abdulraoufsalamah/Desktop/Pro/test/widget_test.dart [E]                                                                                                                    
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/widget_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/widget_test.dart: lib/src/screens/auth/login_screen.dart:4:8: Error: Error when reading 'lib/src/providers/auth_provider.dart': No such file or directory
  import '../../providers/auth_provider.dart';
         ^
  lib/src/screens/auth/login_screen.dart:6:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_animations.dart': No such file or directory
  import '/flutter_flow/flutter_flow_animations.dart';
         ^
  lib/src/screens/auth/login_screen.dart:7:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_theme.dart': No such file or directory
  import '/flutter_flow/flutter_flow_theme.dart';
         ^
  lib/src/screens/auth/login_screen.dart:8:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_util.dart': No such file or directory
  import '/flutter_flow/flutter_flow_util.dart';
         ^
  lib/src/screens/auth/login_screen.dart:9:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_widgets.dart': No such file or directory
  import '/flutter_flow/flutter_flow_widgets.dart';
         ^
  ../../.pub-cache/hosted/pub.dev/win32-5.1.1/lib/src/guid.dart:32:9: Error: Type 'UnmodifiableUint8ListView' not found.
    final UnmodifiableUint8ListView bytes;
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:24:34: Error: 'AnimationInfo' isn't a type.
    final animationsMap = <String, AnimationInfo>{};
                                   ^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:27:34: Error: 'AnimationInfo' isn't a type.
    final animationsMap = <String, AnimationInfo>{};
                                   ^^^^^^^^^^^^^
  lib/src/app.dart:773:18: Error: The argument type 'CardTheme' can't be assigned to the parameter type 'CardThemeData?'.
   - 'CardTheme' is from 'package:flutter/src/material/card_theme.dart' ('../../development/flutter/packages/flutter/lib/src/material/card_theme.dart').
   - 'CardThemeData' is from 'package:flutter/src/material/card_theme.dart' ('../../development/flutter/packages/flutter/lib/src/material/card_theme.dart').
        cardTheme: CardTheme(
                   ^
  lib/src/screens/auth/login_screen.dart:25:29: Error: Undefined name 'context'.
    bool isAndroid = Theme.of(context).platform != TargetPlatform.iOS;
                              ^^^^^^^
  lib/src/screens/auth/login_screen.dart:33:39: Error: The method 'AnimationInfo' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'AnimationInfo'.
        'containerOnPageLoadAnimation': AnimationInfo(
                                        ^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:34:18: Error: The getter 'AnimationTrigger' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'AnimationTrigger'.
          trigger: AnimationTrigger.onPageLoad,
                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:36:11: Error: The method 'FadeEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FadeEffect'.
            FadeEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:38:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:39:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:43:11: Error: The method 'MoveEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'MoveEffect'.
            MoveEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:45:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:46:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:50:11: Error: The method 'ScaleEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'ScaleEffect'.
            ScaleEffect(
            ^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:52:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:53:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:57:11: Error: The method 'TiltEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'TiltEffect'.
            TiltEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:59:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:60:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:252:60: Error: 'AuthProvider' isn't a type.
                            final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                             ^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:346:70: Error: 'AuthProvider' isn't a type.
                                      final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                                       ^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:391:72: Error: 'AuthProvider' isn't a type.
                                        final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                                         ^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:81:26: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
          backgroundColor: FlutterFlowTheme.of(context).secondaryBackground,
                           ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:99:22: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                color: FlutterFlowTheme.of(context).secondaryBackground,
                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:123:32: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                          style: FlutterFlowTheme.of(context).displaySmall.override(
                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:140:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:146:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:153:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:160:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:167:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:173:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:177:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:181:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:200:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:206:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:213:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:220:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:227:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:233:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:237:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:241:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:250:30: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                        child: FFButtonWidget(
                               ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:270:34: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                          options: FFButtonOptions(
                                   ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:275:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            color: FlutterFlowTheme.of(context).primary,
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:276:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:292:30: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                        child: FFButtonWidget(
                               ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:297:34: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                          options: FFButtonOptions(
                                   ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:302:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            color: FlutterFlowTheme.of(context).secondaryBackground,
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:303:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:309:36: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                     ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:324:36: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              style: FlutterFlowTheme.of(context).labelMedium.override(
                                     ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:344:40: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                                  child: FFButtonWidget(
                                         ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:365:44: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                                    options: FFButtonOptions(
                                             ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:370:44: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      color: FlutterFlowTheme.of(context).secondaryBackground,
                                             ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:371:48: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:378:46: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        color: FlutterFlowTheme.of(context).alternate,
                                               ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:382:49: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      hoverColor: FlutterFlowTheme.of(context).primaryBackground,
                                                  ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:389:42: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                                    child: FFButtonWidget(
                                           ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:410:46: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                                      options: FFButtonOptions(
                                               ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:415:46: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                               ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:416:50: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:423:48: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                          color: FlutterFlowTheme.of(context).alternate,
                                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:427:51: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        hoverColor: FlutterFlowTheme.of(context).primaryBackground,
                                                    ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:437:19: Error: The method 'animateOnPageLoad' isn't defined for the type 'Column'.
   - 'Column' is from 'package:flutter/src/widgets/basic.dart' ('../../development/flutter/packages/flutter/lib/src/widgets/basic.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'animateOnPageLoad'.
                  ).animateOnPageLoad(animationsMap['columnOnPageLoadAnimation']!),
                    ^^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:440:13: Error: The method 'animateOnPageLoad' isn't defined for the type 'Container'.
   - 'Container' is from 'package:flutter/src/widgets/container.dart' ('../../development/flutter/packages/flutter/lib/src/widgets/container.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'animateOnPageLoad'.
            ).animateOnPageLoad(animationsMap['containerOnPageLoadAnimation']!),
              ^^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:28:29: Error: Undefined name 'context'.
    bool isAndroid = Theme.of(context).platform != TargetPlatform.iOS;
                              ^^^^^^^
  lib/src/screens/auth/register_screen.dart:38:39: Error: The method 'AnimationInfo' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'AnimationInfo'.
        'containerOnPageLoadAnimation': AnimationInfo(
                                        ^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:39:18: Error: The getter 'AnimationTrigger' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'AnimationTrigger'.
          trigger: AnimationTrigger.onPageLoad,
                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:62:11: Error: The method 'TiltEffect' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'TiltEffect'.
            TiltEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:383:60: Error: 'AuthProvider' isn't a type.
                            final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                             ^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:446:70: Error: 'AuthProvider' isn't a type.
                                      final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                                       ^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:486:72: Error: 'AuthProvider' isn't a type.
                                        final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                                         ^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:88:26: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
          backgroundColor: FlutterFlowTheme.of(context).secondaryBackground,
                           ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:106:22: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                color: FlutterFlowTheme.of(context).secondaryBackground,
                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:130:32: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                          style: FlutterFlowTheme.of(context).displaySmall.override(
                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:146:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:152:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:159:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:166:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:173:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:179:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:183:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:187:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:206:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:212:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:219:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:226:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:233:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:239:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:243:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:247:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:267:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:273:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:280:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:287:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:294:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:300:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:304:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:308:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:326:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:332:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:339:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:346:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:353:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:359:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:363:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:367:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:377:30: Error: The method 'FFButtonWidget' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                        child: FFButtonWidget(
                               ^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:396:34: Error: The method 'FFButtonOptions' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                          options: FFButtonOptions(
                                   ^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:401:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            color: FlutterFlowTheme.of(context).primary,
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:402:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:424:36: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              style: FlutterFlowTheme.of(context).labelMedium.override(
                                     ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:444:40: Error: The method 'FFButtonWidget' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                                  child: FFButtonWidget(
                                         ^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:456:41: Error: The method 'FaIcon' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FaIcon'.
                                    icon: FaIcon(
                                          ^^^^^^
  lib/src/screens/auth/register_screen.dart:457:37: Error: The getter 'FontAwesomeIcons' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FontAwesomeIcons'.
                                      FontAwesomeIcons.google,
                                      ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:460:44: Error: The method 'FFButtonOptions' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                                    options: FFButtonOptions(
                                             ^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:465:44: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      color: FlutterFlowTheme.of(context).secondaryBackground,
                                             ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:466:48: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:473:46: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        color: FlutterFlowTheme.of(context).alternate,
                                               ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:477:49: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      hoverColor: FlutterFlowTheme.of(context).primaryBackground,
                                                  ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:484:42: Error: The method 'FFButtonWidget' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                                    child: FFButtonWidget(
                                           ^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:496:43: Error: The method 'FaIcon' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FaIcon'.
                                      icon: FaIcon(
                                            ^^^^^^
  lib/src/screens/auth/register_screen.dart:497:39: Error: The getter 'FontAwesomeIcons' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FontAwesomeIcons'.
                                        FontAwesomeIcons.apple,
                                        ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:500:46: Error: The method 'FFButtonOptions' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                                      options: FFButtonOptions(
                                               ^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:505:46: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                               ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:506:50: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:513:48: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                          color: FlutterFlowTheme.of(context).alternate,
                                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:517:51: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_RegisterScreenState'.
   - '_RegisterScreenState' is from 'package:shotly/src/screens/auth/register_screen.dart' ('lib/src/screens/auth/register_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        hoverColor: FlutterFlowTheme.of(context).primaryBackground,
                                                    ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:527:19: Error: The method 'animateOnPageLoad' isn't defined for the type 'Column'.
   - 'Column' is from 'package:flutter/src/widgets/basic.dart' ('../../development/flutter/packages/flutter/lib/src/widgets/basic.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'animateOnPageLoad'.
                  ).animateOnPageLoad(animationsMap['columnOnPageLoadAnimation']!),
                    ^^^^^^^^^^^^^^^^^
  lib/src/screens/auth/register_screen.dart:530:13: Error: The method 'animateOnPageLoad' isn't defined for the type 'Container'.
   - 'Container' is from 'package:flutter/src/widgets/container.dart' ('../../development/flutter/packages/flutter/lib/src/widgets/container.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'animateOnPageLoad'.
            ).animateOnPageLoad(animationsMap['containerOnPageLoadAnimation']!),
              ^^^^^^^^^^^^^^^^^
  ../../.pub-cache/hosted/pub.dev/win32-5.1.1/lib/src/guid.dart:32:9: Error: 'UnmodifiableUint8ListView' isn't a type.
    final UnmodifiableUint8ListView bytes;
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  ../../.pub-cache/hosted/pub.dev/win32-5.1.1/lib/src/guid.dart:52:17: Error: Method not found: 'UnmodifiableUint8ListView'.
      return Guid(UnmodifiableUint8ListView(guid));
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  ../../.pub-cache/hosted/pub.dev/win32-5.1.1/lib/src/guid.dart:56:31: Error: Method not found: 'UnmodifiableUint8ListView'.
    factory Guid.zero() => Guid(UnmodifiableUint8ListView(Uint8List(16)));
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  ../../.pub-cache/hosted/pub.dev/win32-5.1.1/lib/src/guid.dart:100:17: Error: Method not found: 'UnmodifiableUint8ListView'.
      return Guid(UnmodifiableUint8ListView(Uint8List.fromList(guidAsBytes)));
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/widget_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/widget_test.dart'
00:22 +7 -5: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                            
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:25 +7 -5: loading /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart                                                                                                                  00:25 +7 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests (setUpAll)                                                                                            00:25 +7 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests (setUpAll)                                                                                            
Starting setUpAll
Set isTestMode to true in setUpAll
setUpAll before reset: isTestMode = true
Resetting Crashlytics instance. Stack trace:
#0      CrashlyticsHelper.resetInstance (package:shotly/src/utils/crashlytics_helper.dart:26:76)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:118:25)
#2      Declarer._setUpAll.<anonymous closure>.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:413:70)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._setUpAll.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:413:24)
#15     _rootRun (dart:async/zone.dart:1525:13)
#16     _CustomZone.run (dart:async/zone.dart:1422:19)
#17     _runZoned (dart:async/zone.dart:2034:6)
#18     runZoned (dart:async/zone.dart:1960:10)
#19     Declarer._setUpAll.<anonymous closure> (package:test_api/src/backend/declarer.dart:412:14)
#20     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:17)
#21     _rootRun (dart:async/zone.dart:1525:13)
#22     _CustomZone.run (dart:async/zone.dart:1422:19)
#23     _runZoned (dart:async/zone.dart:2034:6)
#24     runZoned (dart:async/zone.dart:1960:10)
#25     Invoker._waitForOutstandingCallbacks (package:test_api/src/backend/invoker.dart:278:5)
#26     Invoker._onRun.<anonymous closure>.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/invoker.dart:418:17)
<asynchronous suspension>

setUpAll after reset
setUpAll before set: isTestMode = true
Setting Crashlytics instance to MockFirebaseCrashlytics. Stack trace:
#0      CrashlyticsHelper.instance= (package:shotly/src/utils/crashlytics_helper.dart:20:98)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:122:25)
#2      Declarer._setUpAll.<anonymous closure>.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:413:70)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._setUpAll.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:413:24)
#15     _rootRun (dart:async/zone.dart:1525:13)
#16     _CustomZone.run (dart:async/zone.dart:1422:19)
#17     _runZoned (dart:async/zone.dart:2034:6)
#18     runZoned (dart:async/zone.dart:1960:10)
#19     Declarer._setUpAll.<anonymous closure> (package:test_api/src/backend/declarer.dart:412:14)
#20     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:17)
#21     _rootRun (dart:async/zone.dart:1525:13)
#22     _CustomZone.run (dart:async/zone.dart:1422:19)
#23     _runZoned (dart:async/zone.dart:2034:6)
#24     runZoned (dart:async/zone.dart:1960:10)
#25     Invoker._waitForOutstandingCallbacks (package:test_api/src/backend/invoker.dart:278:5)
#26     Invoker._onRun.<anonymous closure>.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/invoker.dart:418:17)
<asynchronous suspension>

setUpAll after set: isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:124:70)
#2      Declarer._setUpAll.<anonymous closure>.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:413:70)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._setUpAll.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:413:24)
#15     _rootRun (dart:async/zone.dart:1525:13)
#16     _CustomZone.run (dart:async/zone.dart:1422:19)
#17     _runZoned (dart:async/zone.dart:2034:6)
#18     runZoned (dart:async/zone.dart:1960:10)
#19     Declarer._setUpAll.<anonymous closure> (package:test_api/src/backend/declarer.dart:412:14)
#20     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:17)
#21     _rootRun (dart:async/zone.dart:1525:13)
#22     _CustomZone.run (dart:async/zone.dart:1422:19)
#23     _runZoned (dart:async/zone.dart:2034:6)
#24     runZoned (dart:async/zone.dart:1960:10)
#25     Invoker._waitForOutstandingCallbacks (package:test_api/src/backend/invoker.dart:278:5)
#26     Invoker._onRun.<anonymous closure>.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/invoker.dart:418:17)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
setUpAll after set: instance type = MockFirebaseCrashlytics
Finished setUpAll
00:25 +7 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests Check Crashlytics configuration                                                                       00:25 +7 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests Check Crashlytics configuration                                                                       
Starting setUp
Before creating AuthService in setUp, isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:195:88)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Using existing account for raouf2salamah@gmail.com
After creating AuthService in setUp
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:203:87)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
After creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Test: isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:210:56)
#2      Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:242:19)
<asynchronous suspension>
#3      Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#4      Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Test: instance type = MockFirebaseCrashlytics
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:212:32)
#2      Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:242:19)
<asynchronous suspension>
#3      Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#4      Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
00:25 +8 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests Check Crashlytics configuration                                                                       00:25 +8 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests AuthService constructor initializes with null user and loading state                                  00:25 +8 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests AuthService constructor initializes with null user and loading state                                  
Starting setUp
Before creating AuthService in setUp, isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:195:88)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Using existing account for raouf2salamah@gmail.com
After creating AuthService in setUp
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:203:87)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
After creating AuthService in setUp, instance type = MockFirebaseCrashlytics
00:25 +9 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests AuthService constructor initializes with null user and loading state                                  00:25 +9 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests authStateChanges listener loads user and role                                                         00:25 +9 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests authStateChanges listener loads user and role                                                         
Starting setUp
Before creating AuthService in setUp, isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:195:88)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Using existing account for raouf2salamah@gmail.com
After creating AuthService in setUp
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:203:87)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
After creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      AuthService._init.<anonymous closure> (package:shotly/src/services/auth_service.dart:68:101)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before setUserIdentifier in authStateChanges: instance type MockFirebaseCrashlytics
In setUserIdentifier: kIsWeb = false, isCrashlyticsSupported = true, isTestMode = true
Condition: (!isCrashlyticsSupported || isTestMode) = true
[DEBUG] CrashlyticsHelper: Crashlytics setUserIdentifier (web fallback): test-uid
After setUserIdentifier in authStateChanges
Before setCustomKey in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics setCustomKey (web fallback): user_email = test@example.com
After setCustomKey in authStateChanges
Before log in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics log (web fallback): User signed in: test-uid
After log in authStateChanges
00:26 +10 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests authStateChanges listener loads user and role                                                        00:26 +10 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests registerWithEmailAndPassword creates user and saves role                                             00:26 +10 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests registerWithEmailAndPassword creates user and saves role                                             
Starting setUp
Before creating AuthService in setUp, isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:195:88)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Using existing account for raouf2salamah@gmail.com
After creating AuthService in setUp
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:203:87)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
After creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      AuthService._init.<anonymous closure> (package:shotly/src/services/auth_service.dart:68:101)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before setUserIdentifier in authStateChanges: instance type MockFirebaseCrashlytics
In setUserIdentifier: kIsWeb = false, isCrashlyticsSupported = true, isTestMode = true
Condition: (!isCrashlyticsSupported || isTestMode) = true
[DEBUG] CrashlyticsHelper: Crashlytics setUserIdentifier (web fallback): test-uid
After setUserIdentifier in authStateChanges
Before setCustomKey in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics setCustomKey (web fallback): user_email = test@example.com
After setCustomKey in authStateChanges
Before log in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics log (web fallback): User signed in: test-uid
After log in authStateChanges
00:26 +11 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests registerWithEmailAndPassword creates user and saves role                                             00:26 +11 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests signInWithEmailAndPassword signs in and loads user role                                              00:26 +11 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests signInWithEmailAndPassword signs in and loads user role                                              
Starting setUp
Before creating AuthService in setUp, isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:195:88)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Using existing account for raouf2salamah@gmail.com
After creating AuthService in setUp
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:203:87)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
After creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      AuthService._init.<anonymous closure> (package:shotly/src/services/auth_service.dart:68:101)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before setUserIdentifier in authStateChanges: instance type MockFirebaseCrashlytics
In setUserIdentifier: kIsWeb = false, isCrashlyticsSupported = true, isTestMode = true
Condition: (!isCrashlyticsSupported || isTestMode) = true
[DEBUG] CrashlyticsHelper: Crashlytics setUserIdentifier (web fallback): test-uid
After setUserIdentifier in authStateChanges
Before setCustomKey in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics setCustomKey (web fallback): user_email = test@example.com
After setCustomKey in authStateChanges
Before log in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics log (web fallback): User signed in: test-uid
After log in authStateChanges
00:26 +12 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests signInWithEmailAndPassword signs in and loads user role                                              00:26 +12 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests signOut calls Firebase auth signOut and resets state                                                 00:26 +12 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests signOut calls Firebase auth signOut and resets state                                                 
Starting setUp
Before creating AuthService in setUp, isTestMode = true
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:195:88)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Using existing account for raouf2salamah@gmail.com
After creating AuthService in setUp
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart:203:87)
#2      Declarer._runSetUps.<anonymous closure> (package:test_api/src/backend/declarer.dart:403:61)
#3      Future.forEach.<anonymous closure> (dart:async/future.dart:653:26)
#4      Future.doWhile.<anonymous closure> (dart:async/future.dart:710:26)
#5      StackZoneSpecification._registerUnaryCallback.<anonymous closure>.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:36)
#6      StackZoneSpecification._run (package:stack_trace/src/stack_zone_specification.dart:207:15)
#7      StackZoneSpecification._registerUnaryCallback.<anonymous closure> (package:stack_trace/src/stack_zone_specification.dart:127:24)
#8      _rootRunUnary (dart:async/zone.dart:1538:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1429:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1329:7)
#11     _CustomZone.bindUnaryCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1367:26)
#12     Future.doWhile (dart:async/future.dart:727:18)
#13     Future.forEach (dart:async/future.dart:651:12)
#14     Declarer._runSetUps (package:test_api/src/backend/declarer.dart:403:18)
<asynchronous suspension>
#15     Declarer.test.<anonymous closure>.<anonymous closure> (package:test_api/src/backend/declarer.dart:241:9)
<asynchronous suspension>
#16     Declarer.test.<anonymous closure> (package:test_api/src/backend/declarer.dart:240:7)
<asynchronous suspension>
#17     Invoker._waitForOutstandingCallbacks.<anonymous closure> (package:test_api/src/backend/invoker.dart:282:9)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
After creating AuthService in setUp, instance type = MockFirebaseCrashlytics
Crashlytics getter called. Stack trace:
#0      CrashlyticsHelper.instance (package:shotly/src/utils/crashlytics_helper.dart:31:66)
#1      AuthService._init.<anonymous closure> (package:shotly/src/services/auth_service.dart:68:101)
<asynchronous suspension>

Returning existing instance of type: MockFirebaseCrashlytics
Before setUserIdentifier in authStateChanges: instance type MockFirebaseCrashlytics
In setUserIdentifier: kIsWeb = false, isCrashlyticsSupported = true, isTestMode = true
Condition: (!isCrashlyticsSupported || isTestMode) = true
[DEBUG] CrashlyticsHelper: Crashlytics setUserIdentifier (web fallback): test-uid
After setUserIdentifier in authStateChanges
Before setCustomKey in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics setCustomKey (web fallback): user_email = test@example.com
After setCustomKey in authStateChanges
Before log in authStateChanges
[DEBUG] CrashlyticsHelper: Crashlytics log (web fallback): User signed in: test-uid
After log in authStateChanges
Before log in signOut
[DEBUG] CrashlyticsHelper: Crashlytics log (web fallback): User signed out: test-uid
After log in signOut
In setUserIdentifier: kIsWeb = false, isCrashlyticsSupported = true, isTestMode = true
Condition: (!isCrashlyticsSupported || isTestMode) = true
[DEBUG] CrashlyticsHelper: Crashlytics setUserIdentifier (web fallback): 
Before setUserIdentifier empty in authStateChanges
Before setUserIdentifier in signOut
In setUserIdentifier: kIsWeb = false, isCrashlyticsSupported = true, isTestMode = true
Condition: (!isCrashlyticsSupported || isTestMode) = true
[DEBUG] CrashlyticsHelper: Crashlytics setUserIdentifier (web fallback): 
After setUserIdentifier in signOut
After setUserIdentifier empty in authStateChanges
00:26 +13 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests signOut calls Firebase auth signOut and resets state                                                 00:26 +13 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/auth_service_test.dart: AuthService Tests (tearDownAll)                                                                                        00:26 +13 -5: loading /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart                                                                                                            00:26 +13 -5: /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart: Onboarding Screen Tests Onboarding screen shows page indicators                                                   00:26 +13 -6: loading /Users/abdulraoufsalamah/Desktop/Pro/test/custom_text_field_test.dart [E]                                                                                                        
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/custom_text_field_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/custom_text_field_test.dart: test/custom_text_field_test.dart:15:37: Error: Required named parameter 'hintText' must be provided.
                child: CustomTextField(
                                      ^
  lib/src/widgets/custom_text_field.dart:29:9: Context: Found this candidate, but the arguments don't match.
    const CustomTextField({
          ^^^^^^^^^^^^^^^
  test/custom_text_field_test.dart:40:39: Error: Required named parameter 'hintText' must be provided.
                  child: CustomTextField(
                                        ^
  lib/src/widgets/custom_text_field.dart:29:9: Context: Found this candidate, but the arguments don't match.
    const CustomTextField({
          ^^^^^^^^^^^^^^^
  test/custom_text_field_test.dart:75:17: Error: No named parameter with the name 'isPassword'.
                  isPassword: true,
                  ^^^^^^^^^^
  lib/src/widgets/custom_text_field.dart:29:9: Context: Found this candidate, but the arguments don't match.
    const CustomTextField({
          ^^^^^^^^^^^^^^^
  test/custom_text_field_test.dart:103:17: Error: No named parameter with the name 'isPassword'.
                  isPassword: true,
                  ^^^^^^^^^^
  lib/src/widgets/custom_text_field.dart:29:9: Context: Found this candidate, but the arguments don't match.
    const CustomTextField({
          ^^^^^^^^^^^^^^^
  test/custom_text_field_test.dart:88:24: Error: The getter 'obscureText' isn't defined for the type 'TextFormField'.
   - 'TextFormField' is from 'package:flutter/src/material/text_form_field.dart' ('../../development/flutter/packages/flutter/lib/src/material/text_form_field.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'obscureText'.
        expect(textField.obscureText, isTrue);
                         ^^^^^^^^^^^
  test/custom_text_field_test.dart:118:24: Error: The getter 'obscureText' isn't defined for the type 'TextFormField'.
   - 'TextFormField' is from 'package:flutter/src/material/text_form_field.dart' ('../../development/flutter/packages/flutter/lib/src/material/text_form_field.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'obscureText'.
        expect(textField.obscureText, isFalse);
                         ^^^^^^^^^^^
  test/custom_text_field_test.dart:126:31: Error: The getter 'obscureText' isn't defined for the type 'TextFormField'.
   - 'TextFormField' is from 'package:flutter/src/material/text_form_field.dart' ('../../development/flutter/packages/flutter/lib/src/material/text_form_field.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'obscureText'.
        expect(updatedTextField.obscureText, isTrue);
                                ^^^^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/custom_text_field_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/custom_text_field_test.dart'
00:26 +13 -6: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                           
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:28 +14 -6: /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart: Onboarding Screen Tests Onboarding screen shows page indicators                                                   00:28 +14 -6: /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart: Onboarding Screen Tests Onboarding screen has navigation buttons                                                  00:28 +15 -6: /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart: Onboarding Screen Tests Onboarding screen has navigation buttons                                                  00:28 +15 -6: /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart: Onboarding Screen Tests Onboarding screen renders correctly                                                       00:28 +16 -6: /Users/abdulraoufsalamah/Desktop/Pro/test/onboarding_screen_test.dart: Onboarding Screen Tests Onboarding screen renders correctly                                                       00:28 +16 -7: loading /Users/abdulraoufsalamah/Desktop/Pro/test/firestore_optimizer_test.dart [E]                                                                                                      
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/firestore_optimizer_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/firestore_optimizer_test.dart: test/firestore_optimizer_test.dart:34:7: Error: No named parameter with the name 'firestore'.
        firestore: mockFirestore,
        ^^^^^^^^^
  lib/src/utils/firestore_optimizer.dart:8:7: Context: The class 'FirestoreOptimizer' has a constructor that takes no arguments.
  class FirestoreOptimizer {
        ^
  test/firestore_optimizer_test.dart:33:24: Error: Setter not found: 'instance'.
      FirestoreOptimizer.instance = FirestoreOptimizer(
                         ^^^^^^^^
  test/firestore_optimizer_test.dart:56:9: Error: No named parameter with the name 'collectionPath'.
          collectionPath: 'products',
          ^^^^^^^^^^^^^^
  lib/src/utils/firestore_optimizer.dart:53:38: Context: Found this candidate, but the arguments don't match.
    static Query<Map<String, dynamic>> createOptimizedQuery({
                                       ^^^^^^^^^^^^^^^^^^^^
  test/firestore_optimizer_test.dart:84:67: Error: Couldn't find constructor 'LoadBundleTaskSnapshot'.
        when(mockFirestore.loadBundle(any)).thenAnswer((_) async => LoadBundleTaskSnapshot(
                                                                    ^^^^^^^^^^^^^^^^^^^^^^
  test/firestore_optimizer_test.dart:93:55: Error: No named parameter with the name 'bundleData'.
        await FirestoreOptimizer.loadBundle(bundleName, bundleData: bundleData);
                                                        ^^^^^^^^^^
  lib/src/utils/firestore_optimizer.dart:18:23: Context: Found this candidate, but the arguments don't match.
    static Future<bool> loadBundle(String bundleName, {bool forceRefresh = false}) async {
                        ^^^^^^^^^^
  test/firestore_optimizer_test.dart:108:49: Error: Member not found: 'FirestoreOptimizer.isBundleLoaded'.
        final isLoaded = await FirestoreOptimizer.isBundleLoaded(bundleName);
                                                  ^^^^^^^^^^^^^^
  test/firestore_optimizer_test.dart:123:49: Error: Member not found: 'FirestoreOptimizer.isBundleLoaded'.
        final isLoaded = await FirestoreOptimizer.isBundleLoaded(bundleName);
                                                  ^^^^^^^^^^^^^^
  test/firestore_optimizer_test.dart:143:38: Error: Member not found: 'greaterThanOrEqual'.
              operator: FilterOperator.greaterThanOrEqual,
                                       ^^^^^^^^^^^^^^^^^^
  test/firestore_optimizer_test.dart:138:40: Error: Member not found: 'FirestoreOptimizer.createOptimizedCollectionGroupQuery'.
        final query = FirestoreOptimizer.createOptimizedCollectionGroupQuery(
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  test/firestore_optimizer_test.dart:82:29: Error: The argument type 'Null' can't be assigned to the parameter type 'String'.
        when(mockBox.put(any, any)).thenAnswer((_) async {});
                              ^
  test/firestore_optimizer_test.dart:84:54: Error: The argument type 'Future<invalid-type> Function(Invocation)' can't be assigned to the parameter type 'LoadBundleTask Function(Invocation)'.
   - 'Future' is from 'dart:async'.
   - 'Invocation' is from 'dart:core'.
   - 'LoadBundleTask' is from 'package:cloud_firestore/cloud_firestore.dart' ('../../.pub-cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/cloud_firestore.dart').
        when(mockFirestore.loadBundle(any)).thenAnswer((_) async => LoadBundleTaskSnapshot(
                                                       ^
  test/firestore_optimizer_test.dart:96:39: Error: The argument type 'String' can't be assigned to the parameter type 'Uint8List?'.
   - 'Uint8List' is from 'dart:typed_data'.
        verify(mockFirestore.loadBundle(bundleData)).called(1);
                                        ^
  test/firestore_optimizer_test.dart:97:53: Error: The argument type 'Null' can't be assigned to the parameter type 'String'.
        verify(mockBox.put('${bundleName}_timestamp', any)).called(1);
                                                      ^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/firestore_optimizer_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/firestore_optimizer_test.dart'
00:28 +16 -7: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                           
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:30 +16 -8: loading /Users/abdulraoufsalamah/Desktop/Pro/test/locale_service_test.dart [E]                                                                                                           
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/locale_service_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/locale_service_test.dart: test/locale_service_test.dart:48:28: Error: The getter 'isEnglish' isn't defined for the type 'LocaleService'.
   - 'LocaleService' is from 'package:shotly/src/services/locale_service.dart' ('lib/src/services/locale_service.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'isEnglish'.
        expect(localeService.isEnglish, isTrue);
                             ^^^^^^^^^
  test/locale_service_test.dart:51:28: Error: The getter 'isEnglish' isn't defined for the type 'LocaleService'.
   - 'LocaleService' is from 'package:shotly/src/services/locale_service.dart' ('lib/src/services/locale_service.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'isEnglish'.
        expect(localeService.isEnglish, isFalse);
                             ^^^^^^^^^
  test/locale_service_test.dart:56:28: Error: The getter 'isArabic' isn't defined for the type 'LocaleService'.
   - 'LocaleService' is from 'package:shotly/src/services/locale_service.dart' ('lib/src/services/locale_service.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'isArabic'.
        expect(localeService.isArabic, isFalse);
                             ^^^^^^^^
  test/locale_service_test.dart:59:28: Error: The getter 'isArabic' isn't defined for the type 'LocaleService'.
   - 'LocaleService' is from 'package:shotly/src/services/locale_service.dart' ('lib/src/services/locale_service.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'isArabic'.
        expect(localeService.isArabic, isTrue);
                             ^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/locale_service_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/locale_service_test.dart'
00:30 +16 -8: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                           
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:32 +16 -9: loading /Users/abdulraoufsalamah/Desktop/Pro/test/custom_button_test.dart [E]                                                                                                            
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/custom_button_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/custom_button_test.dart: test/custom_button_test.dart:66:17: Error: No named parameter with the name 'borderRadius'.
                  borderRadius: 10.0,
                  ^^^^^^^^^^^^
  lib/src/widgets/custom_button.dart:14:9: Context: Found this candidate, but the arguments don't match.
    const CustomButton({
          ^^^^^^^^^^^^
  test/custom_button_test.dart:17:28: Error: The argument type 'Null' can't be assigned to the parameter type 'void Function()'.
                  onPressed: null,
                             ^
  test/custom_button_test.dart:98:28: Error: The argument type 'Null' can't be assigned to the parameter type 'void Function()'.
                  onPressed: null,
                             ^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/custom_button_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/custom_button_test.dart'
00:32 +16 -9: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                           
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:33 +16 -9: loading /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart                                                                                                                00:33 +16 -9: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen shows loading animation                                                               00:34 +16 -9: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen shows loading animation                                                               00:35 +16 -9: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen shows loading animation                                                               00:35 +16 -10: loading /Users/abdulraoufsalamah/Desktop/Pro/test/login_screen_test.dart [E]                                                                                                            
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/login_screen_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/login_screen_test.dart: lib/src/screens/auth/login_screen.dart:4:8: Error: Error when reading 'lib/src/providers/auth_provider.dart': No such file or directory
  import '../../providers/auth_provider.dart';
         ^
  lib/src/screens/auth/login_screen.dart:6:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_animations.dart': No such file or directory
  import '/flutter_flow/flutter_flow_animations.dart';
         ^
  lib/src/screens/auth/login_screen.dart:7:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_theme.dart': No such file or directory
  import '/flutter_flow/flutter_flow_theme.dart';
         ^
  lib/src/screens/auth/login_screen.dart:8:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_util.dart': No such file or directory
  import '/flutter_flow/flutter_flow_util.dart';
         ^
  lib/src/screens/auth/login_screen.dart:9:8: Error: Error when reading 'lib/flutter_flow/flutter_flow_widgets.dart': No such file or directory
  import '/flutter_flow/flutter_flow_widgets.dart';
         ^
  lib/src/screens/auth/login_screen.dart:24:34: Error: 'AnimationInfo' isn't a type.
    final animationsMap = <String, AnimationInfo>{};
                                   ^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:25:29: Error: Undefined name 'context'.
    bool isAndroid = Theme.of(context).platform != TargetPlatform.iOS;
                              ^^^^^^^
  lib/src/screens/auth/login_screen.dart:33:39: Error: The method 'AnimationInfo' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'AnimationInfo'.
        'containerOnPageLoadAnimation': AnimationInfo(
                                        ^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:34:18: Error: The getter 'AnimationTrigger' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'AnimationTrigger'.
          trigger: AnimationTrigger.onPageLoad,
                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:36:11: Error: The method 'FadeEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FadeEffect'.
            FadeEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:38:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:39:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:43:11: Error: The method 'MoveEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'MoveEffect'.
            MoveEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:45:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:46:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:50:11: Error: The method 'ScaleEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'ScaleEffect'.
            ScaleEffect(
            ^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:52:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:53:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:57:11: Error: The method 'TiltEffect' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'TiltEffect'.
            TiltEffect(
            ^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:59:24: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              delay: 0.0.ms,
                         ^^
  lib/src/screens/auth/login_screen.dart:60:29: Error: The getter 'ms' isn't defined for the type 'double'.
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'ms'.
              duration: 300.0.ms,
                              ^^
  lib/src/screens/auth/login_screen.dart:252:60: Error: 'AuthProvider' isn't a type.
                            final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                             ^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:346:70: Error: 'AuthProvider' isn't a type.
                                      final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                                       ^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:391:72: Error: 'AuthProvider' isn't a type.
                                        final authProvider = Provider.of<AuthProvider>(context, listen: false);
                                                                         ^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:81:26: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
          backgroundColor: FlutterFlowTheme.of(context).secondaryBackground,
                           ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:99:22: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                color: FlutterFlowTheme.of(context).secondaryBackground,
                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:123:32: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                          style: FlutterFlowTheme.of(context).displaySmall.override(
                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:140:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:146:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:153:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:160:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:167:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:173:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:177:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:181:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:200:41: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              labelStyle: FlutterFlowTheme.of(context).labelMedium.override(
                                          ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:206:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).alternate,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:213:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).primary,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:220:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:227:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                  color: FlutterFlowTheme.of(context).error,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:233:40: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              fillColor: FlutterFlowTheme.of(context).primaryBackground,
                                         ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:237:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                color: FlutterFlowTheme.of(context).secondaryText,
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:241:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            style: FlutterFlowTheme.of(context).bodyMedium.override(
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:250:30: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                        child: FFButtonWidget(
                               ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:270:34: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                          options: FFButtonOptions(
                                   ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:275:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            color: FlutterFlowTheme.of(context).primary,
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:276:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            textStyle: FlutterFlowTheme.of(context).titleSmall.override(
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:292:30: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                        child: FFButtonWidget(
                               ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:297:34: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                          options: FFButtonOptions(
                                   ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:302:34: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            color: FlutterFlowTheme.of(context).secondaryBackground,
                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:303:38: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                            textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                       ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:309:36: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                     ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:324:36: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                              style: FlutterFlowTheme.of(context).labelMedium.override(
                                     ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:344:40: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                                  child: FFButtonWidget(
                                         ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:365:44: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                                    options: FFButtonOptions(
                                             ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:370:44: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      color: FlutterFlowTheme.of(context).secondaryBackground,
                                             ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:371:48: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:378:46: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        color: FlutterFlowTheme.of(context).alternate,
                                               ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:382:49: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                      hoverColor: FlutterFlowTheme.of(context).primaryBackground,
                                                  ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:389:42: Error: The method 'FFButtonWidget' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonWidget'.
                                    child: FFButtonWidget(
                                           ^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:410:46: Error: The method 'FFButtonOptions' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'FFButtonOptions'.
                                      options: FFButtonOptions(
                                               ^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:415:46: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        color: FlutterFlowTheme.of(context).secondaryBackground,
                                               ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:416:50: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        textStyle: FlutterFlowTheme.of(context).bodyMedium.override(
                                                   ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:423:48: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                          color: FlutterFlowTheme.of(context).alternate,
                                                 ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:427:51: Error: The getter 'FlutterFlowTheme' isn't defined for the type '_LoginScreenState'.
   - '_LoginScreenState' is from 'package:shotly/src/screens/auth/login_screen.dart' ('lib/src/screens/auth/login_screen.dart').
  Try correcting the name to the name of an existing getter, or defining a getter or field named 'FlutterFlowTheme'.
                                        hoverColor: FlutterFlowTheme.of(context).primaryBackground,
                                                    ^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:437:19: Error: The method 'animateOnPageLoad' isn't defined for the type 'Column'.
   - 'Column' is from 'package:flutter/src/widgets/basic.dart' ('../../development/flutter/packages/flutter/lib/src/widgets/basic.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'animateOnPageLoad'.
                  ).animateOnPageLoad(animationsMap['columnOnPageLoadAnimation']!),
                    ^^^^^^^^^^^^^^^^^
  lib/src/screens/auth/login_screen.dart:440:13: Error: The method 'animateOnPageLoad' isn't defined for the type 'Container'.
   - 'Container' is from 'package:flutter/src/widgets/container.dart' ('../../development/flutter/packages/flutter/lib/src/widgets/container.dart').
  Try correcting the name to the name of an existing method, or defining a method named 'animateOnPageLoad'.
            ).animateOnPageLoad(animationsMap['containerOnPageLoadAnimation']!),
              ^^^^^^^^^^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/login_screen_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/login_screen_test.dart'
00:35 +16 -10: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                          
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:35 +16 -10: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen shows loading animation                                                              
══╡ EXCEPTION CAUGHT BY WIDGETS LIBRARY ╞═══════════════════════════════════════════════════════════
The following _TypeError was thrown building SplashScreen(dirty, dependencies:
[_LocalizationsScope-[GlobalKey#719c1]], state: _SplashScreenState#f3c35):
Null check operator used on a null value

The relevant error-causing widget was:
  SplashScreen
  SplashScreen:file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:40:26

When the exception was thrown, this was the stack:
#0      _SplashScreenState.build (package:shotly/src/screens/shared/splash_screen.dart:87:43)
#1      StatefulElement.build (package:flutter/src/widgets/framework.dart:5833:27)
#2      ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5723:15)
#3      StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#4      Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#5      ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:5705:5)
#6      StatefulElement._firstBuild (package:flutter/src/widgets/framework.dart:5875:11)
#7      ComponentElement.mount (package:flutter/src/widgets/framework.dart:5699:5)
...     Normal element mounting (7 frames)
#14     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#21     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#28     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#35     SingleChildWidgetElementMixin.mount (package:nested/nested.dart:222:11)
...     Normal element mounting (7 frames)
#42     _NestedHookElement.mount (package:nested/nested.dart:187:11)
...     Normal element mounting (7 frames)
#49     SingleChildWidgetElementMixin.mount (package:nested/nested.dart:222:11)
...     Normal element mounting (228 frames)
#277    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#278    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#279    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (465 frames)
#744    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#745    Element.updateChild (package:flutter/src/widgets/framework.dart:3998:20)
#746    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#747    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#748    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#749    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#750    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#751    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#752    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#753    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#754    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#755    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#756    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#757    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#758    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#759    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#760    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#761    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#762    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#763    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#764    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#765    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#766    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#767    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#768    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#769    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#770    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#771    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#772    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#773    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#774    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#775    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#776    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#777    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#778    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#779    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#780    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#781    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#782    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#783    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#784    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#785    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#786    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#787    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#788    _RawViewElement._updateChild (package:flutter/src/widgets/view.dart:481:16)
#789    _RawViewElement.update (package:flutter/src/widgets/view.dart:568:5)
#790    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#791    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#792    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#793    StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#794    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#795    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#796    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#797    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#798    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#799    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#800    RootElement._rebuild (package:flutter/src/widgets/binding.dart:1716:16)
#801    RootElement.update (package:flutter/src/widgets/binding.dart:1694:5)
#802    RootElement.performRebuild (package:flutter/src/widgets/binding.dart:1708:7)
#803    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#804    BuildScope._tryRebuild (package:flutter/src/widgets/framework.dart:2695:15)
#805    BuildScope._flushDirtyElements (package:flutter/src/widgets/framework.dart:2752:11)
#806    BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3056:18)
#807    AutomatedTestWidgetsFlutterBinding.drawFrame (package:flutter_test/src/binding.dart:1506:19)
#808    RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:495:5)
#809    SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1434:15)
#810    SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1347:9)
#811    AutomatedTestWidgetsFlutterBinding.pump.<anonymous closure> (package:flutter_test/src/binding.dart:1335:9)
#814    TestAsyncUtils.guard (package:flutter_test/src/test_async_utils.dart:74:41)
#815    AutomatedTestWidgetsFlutterBinding.pump (package:flutter_test/src/binding.dart:1324:27)
#816    WidgetTester.pumpWidget.<anonymous closure> (package:flutter_test/src/widget_tester.dart:598:22)
#819    TestAsyncUtils.guard (package:flutter_test/src/test_async_utils.dart:74:41)
#820    WidgetTester.pumpWidget (package:flutter_test/src/widget_tester.dart:595:27)
#821    main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:32:20)
#822    testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:29)
<asynchronous suspension>
#823    TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided 5 frames from dart:async and package:stack_trace)

════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test:
Expected: exactly one matching candidate
  Actual: _TypeWidgetFinder:<Found 0 widgets with type "Center": []>
   Which: means none were found but one was expected

When the exception was thrown, this was the stack:
#4      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:46:7)
<asynchronous suspension>
#5      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#6      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)

This was caught by the test expectation on the following line:
  file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart line 46
The test description was:
  SplashScreen shows loading animation
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +16 -11: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen shows loading animation [E]                                                          
  Test failed. See exception logs above.
  The test description was: SplashScreen shows loading animation
  

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart -p vm --plain-name 'SplashScreen Tests SplashScreen shows loading animation'
00:35 +16 -11: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen navigates to onboarding when user is not logged in                                   00:35 +16 -11: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen navigates to onboarding when user is not logged in                                   
══╡ EXCEPTION CAUGHT BY WIDGETS LIBRARY ╞═══════════════════════════════════════════════════════════
The following _TypeError was thrown building SplashScreen(dirty, dependencies:
[_LocalizationsScope-[GlobalKey#cc392]], state: _SplashScreenState#46a71):
Null check operator used on a null value

The relevant error-causing widget was:
  SplashScreen
  SplashScreen:file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:65:26

When the exception was thrown, this was the stack:
#0      _SplashScreenState.build (package:shotly/src/screens/shared/splash_screen.dart:87:43)
#1      StatefulElement.build (package:flutter/src/widgets/framework.dart:5833:27)
#2      ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5723:15)
#3      StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#4      Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#5      ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:5705:5)
#6      StatefulElement._firstBuild (package:flutter/src/widgets/framework.dart:5875:11)
#7      ComponentElement.mount (package:flutter/src/widgets/framework.dart:5699:5)
...     Normal element mounting (7 frames)
#14     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#21     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#28     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#35     SingleChildWidgetElementMixin.mount (package:nested/nested.dart:222:11)
...     Normal element mounting (7 frames)
#42     _NestedHookElement.mount (package:nested/nested.dart:187:11)
...     Normal element mounting (7 frames)
#49     SingleChildWidgetElementMixin.mount (package:nested/nested.dart:222:11)
...     Normal element mounting (228 frames)
#277    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#278    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#279    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (465 frames)
#744    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#745    Element.updateChild (package:flutter/src/widgets/framework.dart:3998:20)
#746    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#747    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#748    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#749    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#750    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#751    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#752    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#753    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#754    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#755    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#756    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#757    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#758    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#759    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#760    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#761    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#762    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#763    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#764    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#765    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#766    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#767    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#768    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#769    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#770    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#771    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#772    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#773    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#774    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#775    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#776    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#777    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#778    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#779    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#780    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#781    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#782    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#783    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#784    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#785    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#786    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#787    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#788    _RawViewElement._updateChild (package:flutter/src/widgets/view.dart:481:16)
#789    _RawViewElement.update (package:flutter/src/widgets/view.dart:568:5)
#790    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#791    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#792    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#793    StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#794    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#795    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#796    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#797    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#798    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#799    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#800    RootElement._rebuild (package:flutter/src/widgets/binding.dart:1716:16)
#801    RootElement.update (package:flutter/src/widgets/binding.dart:1694:5)
#802    RootElement.performRebuild (package:flutter/src/widgets/binding.dart:1708:7)
#803    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#804    BuildScope._tryRebuild (package:flutter/src/widgets/framework.dart:2695:15)
#805    BuildScope._flushDirtyElements (package:flutter/src/widgets/framework.dart:2752:11)
#806    BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3056:18)
#807    AutomatedTestWidgetsFlutterBinding.drawFrame (package:flutter_test/src/binding.dart:1506:19)
#808    RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:495:5)
#809    SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1434:15)
#810    SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1347:9)
#811    AutomatedTestWidgetsFlutterBinding.pump.<anonymous closure> (package:flutter_test/src/binding.dart:1335:9)
#814    TestAsyncUtils.guard (package:flutter_test/src/test_async_utils.dart:74:41)
#815    AutomatedTestWidgetsFlutterBinding.pump (package:flutter_test/src/binding.dart:1324:27)
#816    WidgetTester.pumpWidget.<anonymous closure> (package:flutter_test/src/widget_tester.dart:598:22)
#819    TestAsyncUtils.guard (package:flutter_test/src/test_async_utils.dart:74:41)
#820    WidgetTester.pumpWidget (package:flutter_test/src/widget_tester.dart:595:27)
#821    main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:57:20)
#822    testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:29)
<asynchronous suspension>
#823    TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided 5 frames from dart:async and package:stack_trace)

════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following MissingStubError was thrown running a test:
'currentUser'
No stub was found which matches the arguments of this method call:
currentUser

Add a stub for this method using Mockito's 'when' API, or generate the MockAuthService mock with the
@GenerateNiceMocks annotation (see
https://pub.dev/documentation/mockito/latest/annotations/MockSpec-class.html).

When the exception was thrown, this was the stack:
#0      Mock._noSuchMethod (package:mockito/src/mock.dart:192:7)
#1      Mock.noSuchMethod (package:mockito/src/mock.dart:186:47)
#2      MockAuthService.currentUser (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.mocks.dart:93:7)
#3      _SplashScreenState._checkAuthStatus (package:shotly/src/screens/shared/splash_screen.dart:29:36)
<asynchronous suspension>

The test description was:
  SplashScreen navigates to onboarding when user is not logged in
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:35 +16 -12: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen navigates to onboarding when user is not logged in [E]                               
  Test failed. See exception logs above.
  The test description was: SplashScreen navigates to onboarding when user is not logged in
  
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test (but after the test had completed):
No matching calls. All calls: MockAuthService.addListener(Closure: () => void from Function
'markNeedsNotifyDependents':.), MockAuthService.currentUser
(If you called `verify(...).called(0);`, please instead use `verifyNever(...);`.)

When the exception was thrown, this was the stack:
#0      fail (package:matcher/src/expect/expect.dart:149:31)
#1      _VerifyCall._checkWith (package:mockito/src/mock.dart:797:7)
#2      _makeVerify.<anonymous closure> (package:mockito/src/mock.dart:1071:18)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:74:13)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)
════════════════════════════════════════════════════════════════════════════════════════════════════
  Test failed. See exception logs above.
  The test description was: SplashScreen navigates to onboarding when user is not logged in
  

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart -p vm --plain-name 'SplashScreen Tests SplashScreen navigates to onboarding when user is not logged in'
00:35 +16 -12: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen navigates to buyer screen when user is logged in                                     00:35 +16 -12: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen shows loading animation                                                              
Error loading theme mode: MissingPluginException(No implementation found for method read on channel plugins.it_nomads.com/flutter_secure_storage)
00:36 +16 -12: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen navigates to buyer screen when user is logged in                                     
══╡ EXCEPTION CAUGHT BY WIDGETS LIBRARY ╞═══════════════════════════════════════════════════════════
The following _TypeError was thrown building SplashScreen(dirty, dependencies:
[_LocalizationsScope-[GlobalKey#3da7e]], state: _SplashScreenState#fd8b6):
Null check operator used on a null value

The relevant error-causing widget was:
  SplashScreen
  SplashScreen:file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:94:26

When the exception was thrown, this was the stack:
#0      _SplashScreenState.build (package:shotly/src/screens/shared/splash_screen.dart:87:43)
#1      StatefulElement.build (package:flutter/src/widgets/framework.dart:5833:27)
#2      ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5723:15)
#3      StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#4      Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#5      ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:5705:5)
#6      StatefulElement._firstBuild (package:flutter/src/widgets/framework.dart:5875:11)
#7      ComponentElement.mount (package:flutter/src/widgets/framework.dart:5699:5)
...     Normal element mounting (7 frames)
#14     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#21     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#28     _InheritedProviderScopeElement.mount (package:provider/src/inherited_provider.dart:424:11)
...     Normal element mounting (7 frames)
#35     SingleChildWidgetElementMixin.mount (package:nested/nested.dart:222:11)
...     Normal element mounting (7 frames)
#42     _NestedHookElement.mount (package:nested/nested.dart:187:11)
...     Normal element mounting (7 frames)
#49     SingleChildWidgetElementMixin.mount (package:nested/nested.dart:222:11)
...     Normal element mounting (228 frames)
#277    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#278    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#279    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (465 frames)
#744    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#745    Element.updateChild (package:flutter/src/widgets/framework.dart:3998:20)
#746    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#747    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#748    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#749    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#750    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#751    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#752    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#753    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#754    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#755    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#756    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#757    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#758    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#759    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#760    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#761    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#762    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#763    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#764    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#765    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#766    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#767    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#768    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#769    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#770    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#771    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#772    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#773    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#774    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#775    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#776    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#777    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#778    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#779    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#780    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#781    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#782    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#783    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#784    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#785    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#786    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#787    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#788    _RawViewElement._updateChild (package:flutter/src/widgets/view.dart:481:16)
#789    _RawViewElement.update (package:flutter/src/widgets/view.dart:568:5)
#790    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#791    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#792    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#793    StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#794    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#795    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#796    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#797    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#798    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#799    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#800    RootElement._rebuild (package:flutter/src/widgets/binding.dart:1716:16)
#801    RootElement.update (package:flutter/src/widgets/binding.dart:1694:5)
#802    RootElement.performRebuild (package:flutter/src/widgets/binding.dart:1708:7)
#803    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#804    BuildScope._tryRebuild (package:flutter/src/widgets/framework.dart:2695:15)
#805    BuildScope._flushDirtyElements (package:flutter/src/widgets/framework.dart:2752:11)
#806    BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3056:18)
#807    AutomatedTestWidgetsFlutterBinding.drawFrame (package:flutter_test/src/binding.dart:1506:19)
#808    RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:495:5)
#809    SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1434:15)
#810    SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1347:9)
#811    AutomatedTestWidgetsFlutterBinding.pump.<anonymous closure> (package:flutter_test/src/binding.dart:1335:9)
#814    TestAsyncUtils.guard (package:flutter_test/src/test_async_utils.dart:74:41)
#815    AutomatedTestWidgetsFlutterBinding.pump (package:flutter_test/src/binding.dart:1324:27)
#816    WidgetTester.pumpWidget.<anonymous closure> (package:flutter_test/src/widget_tester.dart:598:22)
#819    TestAsyncUtils.guard (package:flutter_test/src/test_async_utils.dart:74:41)
#820    WidgetTester.pumpWidget (package:flutter_test/src/widget_tester.dart:595:27)
#821    main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:86:20)
#822    testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:29)
<asynchronous suspension>
#823    TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided 5 frames from dart:async and package:stack_trace)

════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following MissingStubError was thrown running a test:
'currentUser'
No stub was found which matches the arguments of this method call:
currentUser

Add a stub for this method using Mockito's 'when' API, or generate the MockAuthService mock with the
@GenerateNiceMocks annotation (see
https://pub.dev/documentation/mockito/latest/annotations/MockSpec-class.html).

When the exception was thrown, this was the stack:
#0      Mock._noSuchMethod (package:mockito/src/mock.dart:192:7)
#1      Mock.noSuchMethod (package:mockito/src/mock.dart:186:47)
#2      MockAuthService.currentUser (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.mocks.dart:93:7)
#3      _SplashScreenState._checkAuthStatus (package:shotly/src/screens/shared/splash_screen.dart:29:36)
<asynchronous suspension>

The test description was:
  SplashScreen navigates to buyer screen when user is logged in
════════════════════════════════════════════════════════════════════════════════════════════════════
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following message was thrown:
Multiple exceptions (2) were detected during the running of the current test, and at least one was
unexpected.
════════════════════════════════════════════════════════════════════════════════════════════════════
00:36 +16 -13: /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart: SplashScreen Tests SplashScreen navigates to buyer screen when user is logged in [E]                                 
  Test failed. See exception logs above.
  The test description was: SplashScreen navigates to buyer screen when user is logged in
  
══╡ EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK ╞════════════════════════════════════════════════════
The following TestFailure was thrown running a test (but after the test had completed):
No matching calls. All calls: MockAuthService.addListener(Closure: () => void from Function
'markNeedsNotifyDependents':.), MockAuthService.currentUser
(If you called `verify(...).called(0);`, please instead use `verifyNever(...);`.)

When the exception was thrown, this was the stack:
#0      fail (package:matcher/src/expect/expect.dart:149:31)
#1      _VerifyCall._checkWith (package:mockito/src/mock.dart:797:7)
#2      _makeVerify.<anonymous closure> (package:mockito/src/mock.dart:1071:18)
#3      main.<anonymous closure>.<anonymous closure> (file:///Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart:103:13)
<asynchronous suspension>
#4      testWidgets.<anonymous closure>.<anonymous closure> (package:flutter_test/src/widget_tester.dart:192:15)
<asynchronous suspension>
#5      TestWidgetsFlutterBinding._runTestBody (package:flutter_test/src/binding.dart:1059:5)
<asynchronous suspension>
<asynchronous suspension>
(elided one frame from package:stack_trace)
════════════════════════════════════════════════════════════════════════════════════════════════════
  Test failed. See exception logs above.
  The test description was: SplashScreen navigates to buyer screen when user is logged in
  

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/splash_screen_test.dart -p vm --plain-name 'SplashScreen Tests SplashScreen navigates to buyer screen when user is logged in'
00:38 +16 -14: loading /Users/abdulraoufsalamah/Desktop/Pro/test/smart_image_test.dart [E]                                                                                                             
  Failed to load "/Users/abdulraoufsalamah/Desktop/Pro/test/smart_image_test.dart":
  Compilation failed for testPath=/Users/abdulraoufsalamah/Desktop/Pro/test/smart_image_test.dart: test/smart_image_test.dart:29:29: Error: Required named parameter 'assetImagePath' must be provided.
              body: SmartImage(
                              ^
  lib/src/widgets/smart_image.dart:33:9: Context: Found this candidate, but the arguments don't match.
    const SmartImage({
          ^^^^^^^^^^
  test/smart_image_test.dart:53:29: Error: Required named parameter 'assetImagePath' must be provided.
              body: SmartImage(
                              ^
  lib/src/widgets/smart_image.dart:33:9: Context: Found this candidate, but the arguments don't match.
    const SmartImage({
          ^^^^^^^^^^
  test/smart_image_test.dart:82:29: Error: Required named parameter 'assetImagePath' must be provided.
              body: SmartImage(
                              ^
  lib/src/widgets/smart_image.dart:33:9: Context: Found this candidate, but the arguments don't match.
    const SmartImage({
          ^^^^^^^^^^
  test/smart_image_test.dart:114:29: Error: Required named parameter 'assetImagePath' must be provided.
              body: SmartImage(
                              ^
  lib/src/widgets/smart_image.dart:33:9: Context: Found this candidate, but the arguments don't match.
    const SmartImage({
          ^^^^^^^^^^
  test/smart_image_test.dart:144:19: Error: Undefined name 'CompressFormat'.
          'format': CompressFormat.webp,
                    ^^^^^^^^^^^^^^
  test/smart_image_test.dart:177:29: Error: Required named parameter 'assetImagePath' must be provided.
              body: SmartImage(
                              ^
  lib/src/widgets/smart_image.dart:33:9: Context: Found this candidate, but the arguments don't match.
    const SmartImage({
          ^^^^^^^^^^
  test/smart_image_test.dart:140:26: Error: The method 'getRecommendedSettings' isn't defined for the type 'MockAssetOptimizer'.
   - 'MockAssetOptimizer' is from 'test/smart_image_test.mocks.dart'.
  Try correcting the name to the name of an existing method, or defining a method named 'getRecommendedSettings'.
        when(mockOptimizer.getRecommendedSettings(any)).thenReturn({
                           ^^^^^^^^^^^^^^^^^^^^^^
  .

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/smart_image_test.dart -p vm --plain-name 'loading /Users/abdulraoufsalamah/Desktop/Pro/test/smart_image_test.dart'
00:38 +16 -14: loading /Users/abdulraoufsalamah/Desktop/Pro/test/secure_storage_test.dart [E]                                                                                                          
  Error: The Dart compiler exited unexpectedly.
  package:flutter_tools/src/base/common.dart 34:3  throwToolExit
  package:flutter_tools/src/compile.dart 910:11    DefaultResidentCompiler._compile.<fn>
  dart:async/zone.dart 1538:47                     _rootRunUnary
  dart:async/zone.dart 1429:19                     _CustomZone.runUnary
  dart:async/future_impl.dart 948:45               Future._propagateToListeners.handleValueCallback
  dart:async/future_impl.dart 977:13               Future._propagateToListeners
  dart:async/future_impl.dart 862:9                Future._propagateToListeners
  dart:async/future_impl.dart 720:5                Future._completeWithValue
  dart:async/future_impl.dart 804:7                Future._asyncCompleteWithValue.<fn>
  dart:async/zone.dart 1525:13                     _rootRun
  dart:async/zone.dart 1422:19                     _CustomZone.run
  dart:async/zone.dart 1321:7                      _CustomZone.runGuarded
  dart:async/zone.dart 1362:23                     _CustomZone.bindCallbackGuarded.<fn>
  dart:async/schedule_microtask.dart 40:35         _microtaskLoop
  dart:async/schedule_microtask.dart 49:5          _startMicrotaskLoop
  dart:isolate-patch/isolate_patch.dart 127:13     _runPendingImmediateCallback
  dart:isolate-patch/isolate_patch.dart 194:5      _RawReceivePort._handleMessage
  
00:38 +16 -14: loading /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart                                                                                                   00:38 +16 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testOverlayProtection - Verify method channel interaction                          00:38 +16 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testOverlayProtection - Verify method channel interaction                          
Method called: enableOverlayProtection
Method invoked successfully
Method calls: [enableOverlayProtection]
00:38 +17 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testOverlayProtection - Verify method channel interaction                          00:38 +17 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testEnableOverlayProtection - Verify Swift implementation                          00:38 +17 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testEnableOverlayProtection - Verify Swift implementation                          
Method invoked successfully
00:38 +18 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testEnableOverlayProtection - Verify Swift implementation                          00:38 +18 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testOverlayAlreadyAdded - Handle case when overlay is already added                00:38 +19 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testOverlayAlreadyAdded - Handle case when overlay is already added                00:38 +19 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testMemoryLimitations - Handle case when overlay fails due to memory issues        00:38 +20 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testMemoryLimitations - Handle case when overlay fails due to memory issues        00:38 +20 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testAppReturningFromBackground - Verify app lifecycle handling                     00:38 +20 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testAppReturningFromBackground - Verify app lifecycle handling                     
Sensitive data cleared
00:38 +21 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testAppReturningFromBackground - Verify app lifecycle handling                     00:38 +21 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testTimeoutAndBiometricReAuthentication - Verify timeout triggers lock screen      00:38 +21 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testTimeoutAndBiometricReAuthentication - Verify timeout triggers lock screen      
Sensitive data cleared
Lock screen shown
[INFO] SensitiveDataManager: Lock screen shown. Biometric auth required: true
00:38 +22 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testTimeoutAndBiometricReAuthentication - Verify timeout triggers lock screen      00:39 +22 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testTimeoutAndBiometricReAuthentication - Verify timeout triggers lock screen      00:40 +22 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testTimeoutAndBiometricReAuthentication - Verify timeout triggers lock screen      00:41 +22 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/services/security_service_test.dart: SecurityService Tests testTimeoutAndBiometricReAuthentication - Verify timeout triggers lock screen      00:41 +22 -14: loading /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart                                                                                                               00:41 +22 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Default theme should be system                                                                    00:41 +22 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Default theme should be system                                                                    
Error loading theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
00:41 +23 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Default theme should be system                                                                    00:41 +23 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Setting theme to dark updates themeMode                                                           00:41 +23 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Setting theme to dark updates themeMode                                                           
Error loading theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
Error saving theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
00:41 +24 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Setting theme to dark updates themeMode                                                           00:41 +24 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Setting theme to light updates themeMode                                                          00:41 +24 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Setting theme to light updates themeMode                                                          
Error loading theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
Error saving theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
00:41 +25 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Setting theme to light updates themeMode                                                          00:41 +25 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Toggle theme switches between light and dark                                                      00:41 +25 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Toggle theme switches between light and dark                                                      
Error loading theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
Error saving theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
Error saving theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
Error saving theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
00:41 +26 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests Toggle theme switches between light and dark                                                      00:41 +26 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests isDarkMode returns correct value                                                                  00:41 +26 -14: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests isDarkMode returns correct value                                                                  
Error loading theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.
00:41 +26 -15: /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart: ThemeService Tests isDarkMode returns correct value [E]                                                              
  Expected: false
    Actual: <Closure: (BuildContext) => bool from Function 'isDarkMode':.>
  
  package:matcher                                     expect
  package:flutter_test/src/widget_tester.dart 473:18  expect
  test/theme_service_test.dart 43:7                   main.<fn>.<fn>
  
Error saving theme mode: Binding has not yet been initialized.
The "instance" getter on the ServicesBinding binding mixin is only available once that binding has been initialized.
Typically, this is done by calling "WidgetsFlutterBinding.ensureInitialized()" or "runApp()" (the latter calls the former). Typically this call is done in the "void main()" method. The "ensureInitialized" method is idempotent; calling it multiple times is not harmful. After calling that method, the "instance" getter will return the binding.
In a test, one can call "TestWidgetsFlutterBinding.ensureInitialized()" as the first line in the test's "main()" method to initialize the binding.
If ServicesBinding is a custom binding mixin, there must also be a custom binding class, like WidgetsFlutterBinding, but that mixes in the selected binding, and that is the class that must be constructed before using the "instance" getter.

To run this test again: /Users/abdulraoufsalamah/development/flutter/bin/cache/dart-sdk/bin/dart test /Users/abdulraoufsalamah/Desktop/Pro/test/theme_service_test.dart -p vm --plain-name 'ThemeService Tests isDarkMode returns correct value'
00:41 +26 -15: Some tests failed.                                                                                                                                                                      
